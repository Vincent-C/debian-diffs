Debian-specific changes for multiarch compatibility.

--- a/primusrun
+++ b/primusrun
@@ -1,5 +1,7 @@
 #!/bin/bash
 
+LIBDIR=$(dpkg-architecture -qDEB_HOST_MULTIARCH)
+
 # Readback-display synchronization method
 # 0: no sync, 1: D lags behind one frame, 2: fully synced
 # export PRIMUS_SYNC=${PRIMUS_SYNC:-0}
@@ -13,17 +15,17 @@
 
 # "Accelerating" libGL
 # $LIB will be interpreted by the dynamic linker
-# export PRIMUS_libGLa=${PRIMUS_libGLa:-'/usr/$LIB/nvidia-bumblebee/libGL.so.1'}
+export PRIMUS_libGLa=${PRIMUS_libGLa:-/usr/lib/$LIBDIR/nvidia/libGL.so.1}
 
 # "Displaying" libGL
-# export PRIMUS_libGLd=${PRIMUS_libGLd:-'/usr/$LIB/libGL.so.1'}
+export PRIMUS_libGLd=${PRIMUS_libGLd:-/usr/lib/mesa-diverted/$LIBDIR/libGL.so.1}
 
 # Directory containing primus libGL
-PRIMUS_libGL=${PRIMUS_libGL:-$(dirname `readlink -ne $0`)/'$LIB'}
+PRIMUS_libGL=${PRIMUS_libGL:-/usr/lib/$LIBDIR/primus}
 
 # On some distributions, e.g. on Gentoo, libnvidia-tls.so is not available
 # in default search paths.  Add its path manually after the primus library
-# PRIMUS_libGL=${PRIMUS_libGL}:/usr/\$LIB/opengl/nvidia/lib
+PRIMUS_libGL=${PRIMUS_libGL}:${PRIMUS_libGLa///libGL.so.1}
 
 # Mesa drivers need a few symbols to be visible
 # export PRIMUS_LOAD_GLOBAL=${PRIMUS_LOAD_GLOBAL:-'libglapi.so.0'}
